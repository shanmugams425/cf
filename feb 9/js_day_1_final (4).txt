***10:43 08-02-2023***
=======================

Functions - refresher

function fnName(arg)
{
	//statements
	//return //optional
}

when return is needed in function:
			|**caller**|
	res=areaOFSomething(10)-areaOfCircle(10)-areaOfSome(10,3);
	console.log(res);//this is expected one

	function areaOFSomething(r){
		var r1=pi*r*r*r;
		//console.log(pi*r*r*r);//not rgt place and this is not expected o/p
		//instead return it back to caller
		return  r1;
		
	}

	function areaOfCircle(r){
		return pi*r*r;
		}

	areaOfSome(r,h){
		return pi*r*r*h;
	}
	
=====================================================================================
task 1 : make only one function and do the above operation
=====================================================================================
hoisting

//JavaScript interpreter hoists the entire function declaration 
//to the top of the current scope,

====================================================================================
IMP NOTE:
----------
Function hoisting only works with function declarations — not with function 
expressions.
====================================================================================

scope:
Variables defined inside a function cannot be accessed from anywhere 
outside the function, 
because the variable is defined only in the scope of the function.

Arguments in function:

its a special object created and is used to store the arguments passed from function call
its an array
its of Arguments Class
use rest and arguments wisely, refer: fns.js file for this

====================================================================================

Note:
-----
7
 The arguments variable is "array-like", but not an array. 
It is array-like in that it has a numbered index and a length property. 
However, it does not possess all of the array-manipulation methods.
====================================================================================

task: try below 

function myConcat(separator) {
  let result = ""; // initialize list
  // iterate through arguments
  for (let i = 1; i < arguments.length; i++) {
    result += arguments[i] + separator;
  }
  return result;
}
====================================================================================
Parameters vs Aruments:
-------------------------
Note the difference between parameters and arguments:

Function parameters are the names listed in the function's definition.
Function arguments are the real values passed to the function.
Parameters are initialized to the values of the arguments supplied.

Function parameters
===================
There are two special kinds of parameter syntax: default parameters and rest parameters.

Default parameters

In JavaScript, parameters of functions default to undefined. 
====================================================================================
task:
-----
Number.parseInt()
Number.parseFloat()
Number.toFixed()
Number.toExponential()
====================================================================================
pure/impure functions:
----------------------

	Pure Functions
A pure function is a function which:

Given the same input, will always return the same output.
Produces no side effects.
So, `console.log( double(5) );` is the same as `console.log(10);`

This is true because `double()` is a pure function, but if `double()` had side-effects, such as saving the value to disk or logging to the console, you couldn’t simply replace `double(5)` with 10 without changing the meaning.


<div id="content">
	
	<h1> </h1>
</div>
var element=document.getElementById('content');
console.log(element);//<div id="content">	<h1> </h1></div>

after 15 sec - u call a timeout(fn,15000)

manipulates the dom

<div id="content">
	<input/>
	<h1> </h1>
</div>
var element=document.getElementById('content');
console.log(element);//<div id="content">	<input/> <h1> </h1></div>
------------------------------------------------------------------------------
This test itself is a checklist. A few examples of side-effects are

Mutating your input
console.log
HTTP calls (AJAX/fetch)
Changing the filesystem (fs)
Querying the DOM

refer below for side effects  and others in pure fns
https://www.freecodecamp.org/news/what-is-a-pure-function-in-javascript-acb887375dfe/
====================================================================================

closure
currying
dom,bom,eventlisteners(loop)
ajax
date-fns,moment js
Intl









